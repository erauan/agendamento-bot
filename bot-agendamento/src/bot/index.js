//const { use } = require('framer-motion/client');
//const { get } = require('http');
//const { start } = require('repl');
//const agendamentoRepository = require('../repository/agendamentoRepository');
const fs = require('fs');
const venom = require('venom-bot');
const empresaRepository = require('../repository/empresaRepository');
const start = require('./fluxo');
const { error } = require('console');


// 1. Configura√ß√£o do Venom-Bot
venom.create({
  session: 'barbetot',
  headless: false,
  multidevice: true,
  disableWelcome: true,
  puppeteerOptions: {
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  }
}).then(async (client) => {
  console.log('‚úÖ Bot conectado ao WhatsApp!');

  let botNumber;

    // SOLU√á√ÉO: Obter n√∫mero alternativamente
    try{
    const me = await client.getMe();
    botNumber = me.id.user;
  } catch (e) {
    try {
      // M√©todo alternativo
      const sessionData = await client.getSessionTokenBrowser();
      botNumber = sessionData.wid.user.replace('c.us', '');
    } catch (e) {
      console.error('‚ùå N√£o foi poss√≠vel obter o n√∫mero do bot');
      // Fallback
      botNumber = "N√öMERO_DO_BOT"; // Insira manualmente se necess√°rio
    }
  }
    console.log('üî¢ N√∫mero do bot:', botNumber);

     // Vincula√ß√£o com empresa
     const empresaAtual = empresaRepository.findEmpresaByNumber(botNumber);
     if (!empresaAtual) {
       console.warn('‚ö†Ô∏è N√∫mero n√£o cadastrado em empresas.json. Usando configura√ß√£o padr√£o.');
       start(client, {
         id: "padrao",
         nome: "Barbearia",
         servicos: [],
         horarios: [],
         fluxo: []
       });
     } else {
       console.log(`üè¢ Vinculado √†: ${empresaAtual.nome}`);
       start(client, empresaAtual);
     }

  // 2. Verifica√ß√£o de conex√£o peri√≥dica
  setInterval(async () => {
    try {
      const state = await client.getConnectionState();
      if (state !== 'CONNECTED') {
        console.log('‚ö†Ô∏è Verificando conex√£o...');
      }
    } catch (e) {
      console.error('‚ùå Erro na verifica√ß√£o de conex√£o:', e);
    }
  }, 300000); // a cada 5 minutos

}).catch(error => {
  console.error('‚ùå Falha na inicializa√ß√£o do bot:', error);
  process.exit(1);
});